employee.js code
const readline = require('readline');

// Store employees in an array
let employees = [];

// Setup readline interface
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// Show menu options
function showMenu() {
  console.log(`
=========================
 Employee Management CLI
=========================
1. Add Employee
2. List Employees
3. Remove Employee
4. Exit
`);
  rl.question('Choose an option (1-4): ', (choice) => {
    switch (choice) {
      case '1':
        addEmployee();
        break;
      case '2':
        listEmployees();
        break;
      case '3':
        removeEmployee();
        break;
      case '4':
        console.log('Exiting... Goodbye!');
        rl.close();
        break;
      default:
        console.log(' Invalid option, please try again.');
        showMenu();
    }
  });
}

// Add a new employee
function addEmployee() {
  rl.question('Enter Employee Name: ', (name) => {
    rl.question('Enter Employee ID: ', (id) => {
      employees.push({ id, name });
      console.log(` Employee Added: ${name} (ID: ${id})`);
      showMenu();
    });
  });
}

// List all employees
function listEmployees() {
  if (employees.length === 0) {
    console.log('No employees found.');
  } else {
    console.log('\nCurrent Employees:');
    employees.forEach((emp, index) => {
      console.log(`${index + 1}. ID: ${emp.id}, Name: ${emp.name}`);
    });
  }
  showMenu();
}

// Remove employee by ID
function removeEmployee() {
  rl.question('Enter Employee ID to remove: ', (id) => {
    const index = employees.findIndex(emp => emp.id === id);
    if (index !== -1) {
      const removed = employees.splice(index, 1);
      console.log(` Removed Employee: ${removed[0].name} (ID: ${removed[0].id})`);
    } else {
      console.log(' Employee not found.');
    }
    showMenu();
  });
}

// Start the application
showMenu();
